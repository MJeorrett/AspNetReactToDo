// <auto-generated />
using System;
using Anrtd.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Anrtd.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210305214109_AddTShirtSizeToToDo")]
    partial class AddTShirtSizeToToDo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Anrtd.Domain.Entities.ToDoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ToDoId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TShirtSize")
                        .HasColumnType("int");

                    b.Property<int?>("TShirtSizeEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("TShirtSizeEntityId");

                    b.ToTable("ToDo");
                });

            modelBuilder.Entity("Anrtd.Domain.Enums.TShirtSizeEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("TShirtSizeId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TShirtSizes");
                });

            modelBuilder.Entity("Anrtd.Domain.Enums.ToDoStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ToDoStatusId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ToDoStatuses");
                });

            modelBuilder.Entity("Anrtd.Domain.Entities.ToDoEntity", b =>
                {
                    b.HasOne("Anrtd.Domain.Enums.ToDoStatusEntity", "StatusEntity")
                        .WithMany("ToDos")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anrtd.Domain.Enums.TShirtSizeEntity", "TShirtSizeEntity")
                        .WithMany("ToDos")
                        .HasForeignKey("TShirtSizeEntityId");

                    b.Navigation("StatusEntity");

                    b.Navigation("TShirtSizeEntity");
                });

            modelBuilder.Entity("Anrtd.Domain.Enums.TShirtSizeEntity", b =>
                {
                    b.Navigation("ToDos");
                });

            modelBuilder.Entity("Anrtd.Domain.Enums.ToDoStatusEntity", b =>
                {
                    b.Navigation("ToDos");
                });
#pragma warning restore 612, 618
        }
    }
}
